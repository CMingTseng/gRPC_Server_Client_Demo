apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

android {
    compileSdkVersion compileVersion
    buildToolsVersion buildVersion
    lintOptions {
        disable 'GoogleAppIndexingWarning', 'HardcodedText', 'InvalidPackage'
        textReport true
        textOutput "stdout"
    }
    defaultConfig {
        applicationId "com.lovoo.ubuntudroid.hellogrpc.server"
        minSdkVersion minVersion
        targetSdkVersion targetVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            // gRPC endpoint
            buildConfigField('String', 'RPC_SERVER_HOST', RpcServerHost)
            buildConfigField('int', 'RPC_SERVER_PORT', RpcServerPort)
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // gRPC endpoint
            buildConfigField('String', 'RPC_SERVER_HOST', RpcServerHost)
            buildConfigField('int', 'RPC_SERVER_PORT', RpcServerPort)
        }
    }

    sourceSets {
        main {
            proto {
                srcDir '../protosfolder/src/main/proto'
            }
            manifest.srcFile 'src/main/AndroidManifest.xml'
            //            java.srcDirs = ['src/main/java',file("${project(':protosfolder').projectDir}/build/generated/source/proto/main/lite"),file("${project(':protosfolder').projectDir}/build/generated/source/proto/main/grpc")]
            java.srcDirs = ['src/main/java', 'src/main/kotlin/']
            aidl.srcDirs = ['src/main/aidl']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
        test {
            java {
                srcDir 'src/main/java'
                srcDir 'src/test/kotlin/'
            }
        }
        androidTest {
            java {
                srcDir 'src/androidTest/java'
                srcDir 'src/androidTest/kotlin/'
            }
        }
    }
    compileOptions {
        sourceCompatibility javasource
        targetCompatibility javatarget
    }
    packagingOptions {
        pickFirst 'META-INF/INDEX.LIST'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/io.netty.versions.properties'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
        }
    }
}

idea {
    module {
        // The whole build dir is excluded by default, but we need build/generated-sources,
        // which contains the generated proto classes.
        excludeDirs = [file('.gradle')]
        if (buildDir.exists()) {
            excludeDirs += files(buildDir.listFiles())
            excludeDirs -= file("$buildDir/generated-sources")
        }
    }
}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    resolutionStrategy {
        force "com.android.support:support-annotations:$supportLibVersion"
        force "com.android.support:support-core-utils:$supportLibVersion"
        force "com.android.support:support-v4:$supportLibVersion"
        force "com.android.support:appcompat-v7:$supportLibVersion"
        force "com.android.support:design:$supportLibVersion"
        force "com.android.support:cardview-v7:$supportLibVersion"
        force "com.android.support:recyclerview-v7:$supportLibVersion"
        force "com.android.support:gridlayout-v7:$supportLibVersion"
        force "com.android.support:support-v13:$supportLibVersion"
        failOnVersionConflict()
        preferProjectModules()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "com.android.support:support-annotations:$supportLibVersion"
    implementation "com.android.support:support-core-utils:$supportLibVersion"
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:gridlayout-v7:$supportLibVersion"
    implementation "com.android.support:support-v13:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation 'junit:junit:4.12'

    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.google.guava:guava:20.0'

    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.netty:netty-tcnative-boringssl-static:${nettyTcNativeVersion}"
//    implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
//    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
////    implementation "io.grpc:grpc-alts:${grpcVersion}"
////    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
//    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    implementation 'javax.annotation:javax.annotation-api:1.2'

    //  FIXME if apply 'com.google.protobuf' plugin this project can auto generated proto java so can close implementation
//    implementation project(":protosfolder")//FIXME  now can not implementation project !!!!
}