apply plugin: 'application'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

def unpackedDistsDir = file("${buildDir}/distributions-unpacked")
def distName = 'api-server'
mainClassName = 'com.kantoniak.examplegrpc.server.ApiServer'
applicationName = 'api-server'
//outputDir = new File(project.buildDir, 'tmp')
//classpath = jar.outputs.files + project.configurations.runtime

applicationDefaultJvmArgs = ["-DRpcServerPort=${RpcServerPort}"]
startScripts.enabled = false

sourceSets {
    main {
        proto {
//           FIXME In addition to the default 'src/main/proto' you can set other  Ref : https://github.com/CMingTseng/protobuf-gradle-plugin#fromHistory
            srcDir '../protosfolder/src/main/proto'
//            srcDir 'src/main/protobuf'
//            srcDir 'src/main/protocolbuffers'
//            // In addition to the default '**/*.proto' (use with caution).
//            // Using an extension other than 'proto' is NOT recommended,
//            // because when proto files are published along with class files, we can
//            // only tell the type of a file from its extension.
//            include '**/*.protodevel'
        }
        java {
            srcDir 'src/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.generateDescriptorSet = true
            task.plugins {
                grpc {
                    option 'lite'
                }
            }
        }
    }
}

//idea {
//    module {
//        // Hint for autocompleting generated proto classes
//        // Not using generatedSourceDirs because of
//        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
//        sourceDirs += file("${project(':protosfolder').projectDir}/build/generated/source/proto/main/lite")
//        sourceDirs += file("${project(':protosfolder').projectDir}/build/generated/source/proto/main/grpc")
//    }
//}

idea {
    module {
        // The whole build dir is excluded by default, but we need build/generated-sources,
        // which contains the generated proto classes.
        excludeDirs = [file('.gradle')]
        if (buildDir.exists()) {
            excludeDirs += files(buildDir.listFiles())
            excludeDirs -= file("$buildDir/generated-sources")
        }
    }
}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    resolutionStrategy {
        failOnVersionConflict()
        preferProjectModules()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//  FIXME if apply 'com.google.protobuf' plugin this project can auto generated proto java so can close implementation
//  implementation project(":protosfolder")
//  FIXME if do not apply 'com.google.protobuf' plugin and do not implementation project  can use libs generated by protosfolder  build.gradle

    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.google.guava:guava:20.0'
    // For protos
    implementation "io.grpc:grpc-alts:${grpcVersion}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    // Used in HelloWorldServerTls
//    implementation "io.grpc:grpc-netty:${grpcVersion}"
//    implementation "io.netty:netty-tcnative-boringssl-static:${nettyTcNativeVersion}"

//    implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}
//    implementation "io.grpc:grpc-auth:${grpcVersion}"
//    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
//    implementation("io.grpc:grpc-protobuf:${grpcVersion}") {
//        exclude module: "protobuf-lite"
//    }

//    implementation "io.grpc:grpc-all:${grpcVersion}"
//    OAuth2 for Google API Ref: https://stackoverflow.com/questions/49811232/updating-google-cloud-speech-api-protobuf-gradle-to-0-8-5-duplicate-libraries
//    implementation('com.google.auth:google-auth-library-oauth2-http:0.7.0') {
//        exclude module: 'httpclient'
//    }
}

task unzipDist(type: Copy) {
    dependsOn distZip

    def zipFile = file("${buildDir}/distributions/${distName}.zip")
    def outputDir = unpackedDistsDir

    from zipTree(zipFile)
    into outputDir
}

task runServer(type: Exec) {
    dependsOn unzipDist

    def system = org.gradle.internal.os.OperatingSystem.current()

    // Windows-specific
    def batchFile = file("${unpackedDistsDir}/${distName}/bin/${distName}.bat")
    def gitBashExe = new File("C:/Program Files/Git/git-bash.exe")

    // Linux-specific
    def shFile = file("${unpackedDistsDir}/${distName}/bin/${distName}")

    if (system.isWindows()) {
        if (gitBashExe.exists()) {
            commandLine = [gitBashExe, shFile]
        } else {
            commandLine = ['cmd', '/C', 'start', batchFile]
        }
    } else {
        commandLine = shFile
    }

    workingDir = unpackedDistsDir
    ignoreExitValue = true
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"