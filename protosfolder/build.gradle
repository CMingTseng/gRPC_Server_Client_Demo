apply plugin: 'java-library'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

protobuf {
    //FIXME  if Android Project use implementation project maybe protoc & lite (javalite ) &  grpc something wrong ??!! will Program type already present: com.google.protobuf.AbstractMessageLite$Builder
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        lite { //For Android Project implementation dependencies protos
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        javalite {//For Android Project implementation dependencies protos
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.generateDescriptorSet = true
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                lite {}//For Android Project implementation dependencies protos  //need block grpc{}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

//idea {
//    module {
//        // Hint for autocompleting generated proto classes
//        // Not using generatedSourceDirs because of
//        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
//        sourceDirs += file("${project(':protosfolder').projectDir}/build/generated/source/proto/main/lite")
//        sourceDirs += file("${project(':protosfolder').projectDir}/build/generated/source/proto/main/grpc")
//    }
//}

idea {
    module {
        // The whole build dir is excluded by default, but we need build/generated-sources,
        // which contains the generated proto classes.
        excludeDirs = [file('.gradle')]
        if (buildDir.exists()) {
            excludeDirs += files(buildDir.listFiles())
            excludeDirs -= file("$buildDir/generated-sources")
        }
    }
}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
}

dependencies {
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    // For protos

//    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
//    implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    implementation("io.grpc:grpc-protobuf:${grpcVersion}") {
        exclude module: "protobuf-lite"
//        exclude group: 'com.google.protobuf', module: 'hamcrest-core'
    }
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
//    implementation "io.grpc:grpc-auth:${grpcVersion}"
//    implementation "io.grpc:grpc-all:${grpcVersion}"
//    implementation "io.grpc:grpc-alts:${grpcVersion}"
//    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    // Used in HelloWorldServerTls
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.netty:netty-tcnative-boringssl-static:${nettyTcNativeVersion}"

    //For Android Project implementation dependencies protos //need remark up
//    implementation 'com.google.protobuf:protobuf-lite:3.0.1'
}
sourceCompatibility = "1.8"
targetCompatibility = "1.8"
